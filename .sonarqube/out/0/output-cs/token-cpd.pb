˜
U/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/WeatherForecast.cs
	namespace 	

IvrProject
 
. 
Api 
; 
public 
class 
WeatherForecast 
{ 
public 

DateOnly 
Date 
{ 
get 
; 
set  #
;# $
}% &
public 

int 
TemperatureC 
{ 
get !
;! "
set# &
;& '
}( )
public		 

int		 
TemperatureF		 
=>		 
$num		 !
+		" #
(		$ %
int		% (
)		( )
(		) *
TemperatureC		* 6
/		7 8
$num		9 ?
)		? @
;		@ A
public 

string 
? 
Summary 
{ 
get  
;  !
set" %
;% &
}' (
} ˛K
[/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Services/TokenService.cs
	namespace 	
SQL_SERVER_API
 
. 
Services !
;! "
public 
class 
TokenService 
: 
ITokenService )
{ 
private 
readonly 
IConfiguration #
_configuration$ 2
;2 3
private 
readonly 
TokenRespository %
_tokenRepository& 6
;6 7
public 

TokenService 
( 
IConfiguration &
configuration' 4
)4 5
{ 
_configuration 
= 
configuration &
;& '
string 
? 
connectionString  
=! "
_configuration# 1
.1 2
GetConnectionString2 E
(E F
$strF U
)U V
;V W
_tokenRepository 
= 
new 
TokenRespository /
(/ 0
connectionString0 @
)@ A
;A B
} 
public 

string 
GenerateJwtToken "
(" #
UserDto# *
userDto+ 2
)2 3
{ 
try   
{!! 	
string"" 
	secretKey"" 
="" 
_configuration"" -
[""- .
$str"". :
]"": ;
??""< >
throw""? D
new""E H!
ArgumentNullException""I ^
(""^ _
$str	""_ Ñ
)
""Ñ Ö
;
""Ö Ü
string## 
issuer## 
=## 
_configuration## *
[##* +
$str##+ 7
]##7 8
??##9 ;
throw##< A
new##B E!
ArgumentNullException##F [
(##[ \
$str	##\ Å
)
##Å Ç
;
##Ç É
string$$ 
audience$$ 
=$$ 
_configuration$$ ,
[$$, -
$str$$- ;
]$$; <
??$$= ?
throw$$@ E
new$$F I!
ArgumentNullException$$J _
($$_ `
$str	$$` á
)
$$á à
;
$$à â
var&& 
securityKey&& 
=&& 
new&& ! 
SymmetricSecurityKey&&" 6
(&&6 7
Encoding&&7 ?
.&&? @
UTF8&&@ D
.&&D E
GetBytes&&E M
(&&M N
	secretKey&&N W
)&&W X
)&&X Y
;&&Y Z
var'' 
credentials'' 
='' 
new'' !
SigningCredentials''" 4
(''4 5
securityKey''5 @
,''@ A
SecurityAlgorithms''B T
.''T U

HmacSha256''U _
)''_ `
;''` a
var)) 
claims)) 
=)) 
new)) 
[)) 
])) 
{** 
new++ 
Claim++ 
(++ #
JwtRegisteredClaimNames++ 1
.++1 2
Sub++2 5
,++5 6
userDto++7 >
.++> ?
id++? A
.++A B
ToString++B J
(++J K
)++K L
)++L M
,++M N
new,, 
Claim,, 
(,, #
JwtRegisteredClaimNames,, 1
.,,1 2
Jti,,2 5
,,,5 6
Guid,,7 ;
.,,; <
NewGuid,,< C
(,,C D
),,D E
.,,E F
ToString,,F N
(,,N O
),,O P
),,P Q
,,,Q R
new// 
Claim// 
(// #
JwtRegisteredClaimNames// 1
.//1 2

UniqueName//2 <
,//< =
userDto//> E
.//E F
name//F J
)//J K
,//K L
new11 
Claim11 
(11 

ClaimTypes11 $
.11$ %
Role11% )
,11) *
string11+ 1
.111 2
Join112 6
(116 7
$str117 :
,11: ;
userDto11< C
.11C D
roleId11D J
.11J K
ToString11K S
(11S T
)11T U
)11U V
)11V W
}33 
;33 
var55 
token55 
=55 
new55 
JwtSecurityToken55 ,
(55, -
issuer66 
:66 
issuer66 
,66 
audience77 
:77 
audience77 "
,77" #
claims88 
:88 
claims88 
,88 
expires99 
:99 
DateTime99 !
.99! "
UtcNow99" (
.99( )

AddMinutes99) 3
(993 4
$num994 6
)996 7
,997 8
signingCredentials:: "
:::" #
credentials::$ /
);; 
;;; 
return== 
new== #
JwtSecurityTokenHandler== .
(==. /
)==/ 0
.==0 1

WriteToken==1 ;
(==; <
token==< A
)==A B
;==B C
}>> 	
catch?? 
(?? 
System?? 
.?? 
	Exception?? 
ex??  "
)??" #
{@@ 	
throwBB 
newBB %
InvalidOperationExceptionBB /
(BB/ 0
$strBB0 P
+BBQ R
exBBS U
.BBU V
MessageBBV ]
)BB] ^
;BB^ _
}CC 	
}DD 
publicFF 

asyncFF 
TaskFF 
<FF 
stringFF 
>FF  
GenerateRefreshTokenFF 2
(FF2 3
UserDtoFF3 :
userDtoFF; B
)FFB C
{GG 
stringII 
refreshTokenII 
=II 
GuidII "
.II" #
NewGuidII# *
(II* +
)II+ ,
.II, -
ToStringII- 5
(II5 6
)II6 7
;II7 8
DateTimeLL 
expireLL 
=LL 
DateTimeLL "
.LL" #
UtcNowLL# )
.LL) *
AddDaysLL* 1
(LL1 2
$numLL2 3
)LL3 4
;LL4 5
tryPP 
{QQ 	
varRR 
resultRR 
=RR 
awaitRR 
_tokenRepositoryRR /
.RR/ 0
StoreRefreshTokenRR0 A
(RRA B
userDtoRRB I
.RRI J
idRRJ L
,RRL M
refreshTokenRRN Z
,RRZ [
expireRR\ b
.RRb c
ToStringRRc k
(RRk l
$str	RRl Å
)
RRÅ Ç
)
RRÇ É
;
RRÉ Ñ
ifTT 
(TT 
resultTT 
)TT 
returnTT 
refreshTokenTT *
;TT* +
}UU 	
catchVV 
(VV 
SystemVV 
.VV 
	ExceptionVV 
exVV  "
)VV" #
{WW 	
ConsoleYY 
.YY 
	WriteLineYY 
(YY 
$strYY &
+YY' (
exYY) +
.YY+ ,
MessageYY, 3
)YY3 4
;YY4 5
}ZZ 	
return\\ 
$str\\ 
;\\ 
}]] 
public__ 

async__ 
Task__ 
<__ 
string__ 
>__ 
verifyExpiredToken__ 0
(__0 1
UserDto__1 8
userDto__9 @
)__@ A
{__A B
tryaa 
{bb 	
RefreshTokencc 
resultcc 
=cc  !
awaitcc" '
_tokenRepositorycc( 8
.cc8 9!
GetRefreshTokenByUsercc9 N
(ccN O
userDtoccO V
.ccV W
idccW Y
)ccY Z
;ccZ [
ifee 
(ee 
resultee 
==ee 
nullee 
)ee 
returnee  &
$stree' )
;ee) *
DateTimegg 
nowgg 
=gg 
DateTimegg #
.gg# $
Nowgg$ '
;gg' (
DateTimehh 

expireDatehh 
=hh  !
DateTimehh" *
.hh* +
Parsehh+ 0
(hh0 1
resulthh1 7
.hh7 8
Expirehh8 >
)hh> ?
;hh? @
ifjj 
(jj 
nowjj 
<jj 

expireDatejj  
)jj  !
returnjj" (
resultjj) /
.jj/ 0
Tokenjj0 5
;jj5 6
}ll 	
catchmm 
(mm 
Systemmm 
.mm 
	Exceptionmm 
exmm  "
)mm" #
{nn 	
Consoleoo 
.oo 
	WriteLineoo 
(oo 
$stroo '
+oo( )
exoo* ,
.oo, -
Messageoo- 4
)oo4 5
;oo5 6
throwpp 
;pp 
}qq 	
returnss 
$strss 
;ss 
}uu 
publicww 

asyncww 
Taskww 
<ww 
RefreshTokenww "
>ww" #
GetRefreshTokenww$ 3
(ww3 4
stringww4 :
refreshTokenww; G
)wwG H
{xx 
tryyy 
{zz 	
RefreshToken{{ 
result{{ 
={{  !
await{{" '
_tokenRepository{{( 8
.{{8 9
GetRefreshToken{{9 H
({{H I
refreshToken{{I U
){{U V
;{{V W
return}} 
result}} 
;}} 
} 	
catch
ÄÄ 
(
ÄÄ 
System
ÄÄ 
.
ÄÄ 
	Exception
ÄÄ 
ex
ÄÄ  "
)
ÄÄ" #
{
ÅÅ 	
Console
ÉÉ 
.
ÉÉ 
	WriteLine
ÉÉ 
(
ÉÉ 
$str
ÉÉ &
+
ÉÉ' (
ex
ÉÉ) +
.
ÉÉ+ ,
Message
ÉÉ, 3
)
ÉÉ3 4
;
ÉÉ4 5
}
ÑÑ 	
return
ÜÜ 
null
ÜÜ 
!
ÜÜ 
;
ÜÜ 
}
àà 
}ää €5
[/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Services/UsersService.cs
	namespace 	
SQL_SERVER_API
 
. 
Services !
;! "
public 
class 
UsersService 
: 
ICommService (
<( )
User) -
,- .
UserDto/ 6
,6 7
InsertedUserDto8 G
>G H
{		 
private

 
readonly

 
UserRepository

 #
_userRepository

$ 3
;

3 4
private 
readonly 
IConfiguration #
_configuration$ 2
;2 3
public 

UsersService 
( 
IConfiguration &
configuration' 4
)4 5
{ 
_configuration 
= 
configuration &
;& '
string 
? 
connectionString  
=! "
_configuration# 1
.1 2
GetConnectionString2 E
(E F
$strF U
)U V
;V W
_userRepository 
= 
new 
UserRepository ,
(, -
connectionString- =
)= >
;> ?
} 
public 

async 
Task 
< 
List 
< 
UserDto "
>" #
># $
Get% (
(( )
)) *
{ 
_userRepository 
. 
Connect 
(  
)  !
;! "
List 
< 
UserDto 
> 
users 
= 
await #
_userRepository$ 3
.3 4
GetUsers4 <
(< =
)= >
;> ?
_userRepository 
. 
Close 
( 
) 
;  
return 
users 
; 
}   
public!! 

async!! 
Task!! 
<!! 
List!! 
<!! 
UserDto!! "
>!!" #
>!!# $
GetById!!% ,
(!!, -
int!!- 0
idUser!!1 7
)!!7 8
{"" 
_userRepository## 
.## 
Connect## 
(##  
)##  !
;##! "
List%% 
<%% 
UserDto%% 
>%% 
users%% 
=%% 
await%% #
_userRepository%%$ 3
.%%3 4
GetUserById%%4 ?
(%%? @
idUser%%@ F
)%%F G
;%%G H
_userRepository'' 
.'' 
Close'' 
('' 
)'' 
;''  
return)) 
users)) 
;)) 
}** 
public++ 

async++ 
Task++ 
<++ 
List++ 
<++ 
UserDto++ "
>++" #
>++# $
	GetByName++% .
(++. /
UserDto++/ 6
user++7 ;
)++; <
{,, 
_userRepository-- 
.-- 
Connect-- 
(--  
)--  !
;--! "
List// 
<// 
UserDto// 
>// 
users// 
=// 
await// #
_userRepository//$ 3
.//3 4
GetUserByName//4 A
(//A B
user//B F
)//F G
;//G H
_userRepository11 
.11 
Close11 
(11 
)11 
;11  
return33 
users33 
;33 
}44 
public66 

async66 
Task66 
<66 
List66 
<66 
InsertedUserDto66 *
>66* +
>66+ ,
Add66- 0
(660 1
User661 5
user666 :
)66: ;
{77 
UserDto88 
userDto88 
=88 
new88 
UserDto88 %
(88% &
)88& '
{88' (
name99 
=99 
user99 
.99 
name99 
,99 
roleId:: 
=:: 
user:: 
.:: 
roleId::  
};; 	
;;;	 

var== 
	userFound== 
=== 
await== 
	GetByName== '
(==' (
userDto==( /
)==/ 0
;==0 1
if?? 

(?? 
	userFound?? 
.?? 
Count?? 
>?? 
$num?? 
)??  
return??! '
new??( +
List??, 0
<??0 1
InsertedUserDto??1 @
>??@ A
(??A B
)??B C
;??C D
_userRepositoryAA 
.AA 
ConnectAA 
(AA  
)AA  !
;AA! "
ListCC 
<CC 
InsertedUserDtoCC 
>CC 
usersCC #
=CC$ %
awaitCC& +
_userRepositoryCC, ;
.CC; <
AddUserCC< C
(CCC D
userCCD H
)CCH I
;CCI J
_userRepositoryEE 
.EE 
CloseEE 
(EE 
)EE 
;EE  
returnGG 
usersGG 
;GG 
}HH 
publicJJ 

asyncJJ 
TaskJJ 
<JJ 
ListJJ 
<JJ 
UserDtoJJ "
>JJ" #
>JJ# $
UpdateJJ% +
(JJ+ ,
UserJJ, 0
userJJ1 5
)JJ5 6
{KK 
_userRepositoryLL 
.LL 
ConnectLL 
(LL  
)LL  !
;LL! "
ListNN 
<NN 
UserDtoNN 
>NN 
usersNN 
=NN 
awaitNN #
_userRepositoryNN$ 3
.NN3 4

UpdateUserNN4 >
(NN> ?
userNN? C
)NNC D
;NND E
_userRepositoryPP 
.PP 
ClosePP 
(PP 
)PP 
;PP  
returnRR 
usersRR 
;RR 
}SS 
publicUU 

asyncUU 
TaskUU 
<UU 
ListUU 
<UU 
UserDtoUU "
>UU" #
>UU# $
DeleteUU% +
(UU+ ,
intUU, /
idUserUU0 6
)UU6 7
{VV 
_userRepositoryXX 
.XX 
ConnectXX 
(XX  
)XX  !
;XX! "
ListZZ 
<ZZ 
UserDtoZZ 
>ZZ 
usersZZ 
=ZZ 
awaitZZ #
_userRepositoryZZ$ 3
.ZZ3 4

DeleteUserZZ4 >
(ZZ> ?
idUserZZ? E
)ZZE F
;ZZF G
_userRepository\\ 
.\\ 
Close\\ 
(\\ 
)\\ 
;\\  
return^^ 
users^^ 
;^^ 
}`` 
}bb Ê6
Z/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Services/AuthService.cs
	namespace 	
SQL_SERVER_API
 
. 
Services !
;! "
public

 
class

 
AuthService

 
:

 
IAuthService

 '
{ 
private 
readonly 
UserRepository #
_userRepository$ 3
;3 4
private 
readonly 
IConfiguration #
_configuration$ 2
;2 3
private 
readonly 
ITokenService "
_tokenService# 0
;0 1
public 

AuthService 
( 
IConfiguration %
configuration& 3
,3 4
ITokenService5 B
tokenServiceC O
)O P
{ 
_configuration 
= 
configuration &
;& '
string 
? 
connectionString  
=! "
_configuration# 1
.1 2
GetConnectionString2 E
(E F
$strF U
)U V
;V W
_userRepository 
= 
new 
UserRepository ,
(, -
connectionString- =
)= >
;> ?
_tokenService 
= 
tokenService $
;$ %
} 
public 

async 
Task 
< 
LoginDto 
> 
GetUserToLogin  .
(. /
LoginDto/ 7
user8 <
)< =
{ 
_userRepository 
. 
Connect 
(  
)  !
;! "
LoginDto   
loginDto   
=   
await   !
_userRepository  " 1
.  1 2
GetUserToLogin  2 @
(  @ A
user  A E
)  E F
;  F G
_userRepository"" 
."" 
Close"" 
("" 
)"" 
;""  
return%% 
loginDto%% 
;%% 
}&& 
public(( 

async(( 
Task(( 
<(( 
List(( 
<(( 
string(( !
>((! "
>((" #
Login(($ )
((() *
LoginDto((* 2
loginDto((3 ;
)((; <
{)) 
LoginDto++ 
user++ 
=++ 
await++ 
_userRepository++ -
.++- .
GetUserToLogin++. <
(++< =
loginDto++= E
)++E F
;++F G
if-- 

(-- 
user-- 
==-- 
null-- 
)-- 
throw-- 
new--  #
	Exception--$ -
(--- .
$str--. >
)--> ?
;--? @
bool// 
verified// 
=// 
EncryptString// %
.//% &
VerifyPassword//& 4
(//4 5
loginDto//5 =
.//= >
Password//> F
,//F G
user//H L
.//L M
Password//M U
)//U V
;//V W
if11 

(11 
!11 
verified11 
)11 
throw11 
new11  
	Exception11! *
(11* +
$str11+ ?
)11? @
;11@ A
UserDto33 
userDto33 
=33 
new33 
UserDto33 %
{44 	
id55 
=55 
user55 
.55 
Id55 
,55 
name66 
=66 
user66 
.66 
Username66  
,66  !
roleId77 
=77 
user77 
.77 
roleId77  
}88 	
;88	 

var;; 
token;; 
=;; 
_tokenService;; !
.;;! "
GenerateJwtToken;;" 2
(;;2 3
userDto;;3 :
);;: ;
;;;; <
string?? 
refresh_token?? 
=?? 
await?? $
_tokenService??% 2
.??2 3
verifyExpiredToken??3 E
(??E F
userDto??F M
)??M N
;??N O
ifAA 

(AA
 
refresh_tokenAA 
==AA 
$strAA 
||AA !
refresh_tokenAA" /
==AA0 2
nullAA3 7
)AA7 8
{AA9 :
refresh_tokenCC 
=CC 
awaitCC !
_tokenServiceCC" /
.CC/ 0 
GenerateRefreshTokenCC0 D
(CCD E
userDtoCCE L
)CCL M
;CCM N
}DD 	
ifGG 

(GG 
refresh_tokenGG 
==GG 
$strGG 
||GG  "
refresh_tokenGG# 0
==GG1 3
nullGG4 8
)GG8 9
{HH 	
refresh_tokenII 
=II 
$strII <
;II< =
}JJ 	
returnLL 
newLL 
ListLL 
<LL 
stringLL 
>LL 
{LL  !
tokenLL" '
,LL' (
refresh_tokenLL) 6
.LL6 7
ToStringLL7 ?
(LL? @
)LL@ A
}LLB C
;LLC D
}NN 
publicQQ 

asyncQQ 
TaskQQ 
<QQ 
ListQQ 
<QQ 
UserDtoQQ "
>QQ" #
>QQ# $/
#VerifyAndRetrieveUserByRefreshTokenQQ% H
(QQH I
stringQQI O
refreshTokenQQP \
)QQ\ ]
{RR 
RefreshTokenUU 
getRefreshTokenUU $
=UU% &
awaitUU' ,
_tokenServiceUU- :
.UU: ;
GetRefreshTokenUU; J
(UUJ K
refreshTokenUUK W
)UUW X
;UUX Y
ifXX 

(XX 
getRefreshTokenXX 
==XX 
nullXX #
)XX# $
{YY 	
return[[ 
null[[ 
![[ 
;[[ 
}\\ 	
int__ 
userid__ 
=__ 
Convert__ 
.__ 
ToInt32__ $
(__$ %
getRefreshToken__% 4
.__4 5
IdUser__5 ;
)__; <
;__< =
DateTime`` 

expireDate`` 
=`` 
DateTime`` &
.``& '
Parse``' ,
(``, -
getRefreshToken``- <
.``< =
Expire``= C
)``C D
;``D E
DateTimeaa 
nowaa 
=aa 
DateTimeaa 
.aa  
Nowaa  #
;aa# $
ifdd 

(dd 
useriddd 
<dd 
$numdd 
||dd 
nowdd 
>dd 

expireDatedd  *
)dd* +
{ee 	
throwff 
newff 
	Exceptionff 
(ff  
$strff  7
)ff7 8
;ff8 9
}gg 	
returnjj 
awaitjj 
_userRepositoryjj $
.jj$ %
GetUserByIdjj% 0
(jj0 1
useridjj1 7
)jj7 8
;jj8 9
}kk 
}nn å≠
_/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Repository/UserRepository.cs
	namespace 	
SQL_SERVER_API
 
. 

Repository #
;# $
public

 
class

 
UserRepository

 
:

 
	DbContext

 '
{ 
public 

UserRepository 
( 
string  
connectionString! 1
)1 2
:3 4
base5 9
(9 :
connectionString: J
)J K
{ 
} 
public 

async 
Task 
< 
List 
< 
UserDto "
>" #
># $
GetUsers% -
(- .
). /
{ 
Connect 
( 
) 
; 
List 
< 
UserDto 
> 
users 
= 
new !
List" &
<& '
UserDto' .
>. /
(/ 0
)0 1
;1 2
string 
query 
= 
$str L
;L M
try 
{ 	

SqlCommand 
command 
=  
new! $

SqlCommand% /
(/ 0
query0 5
,5 6
_connection7 B
)B C
;C D
SqlDataReader 
reader  
=! "
await# (
command) 0
.0 1
ExecuteReaderAsync1 C
(C D
)D E
;E F
while   
(   
await   
reader   
.    
	ReadAsync    )
(  ) *
)  * +
)  + ,
{!! 
int## 
id## 
=## 
reader## 
.##  
GetInt32##  (
(##( )
$num##) *
)##* +
;##+ ,
string$$ 
name$$ 
=$$ 
reader$$ $
.$$$ %
	GetString$$% .
($$. /
$num$$/ 0
)$$0 1
;$$1 2
int%% 
roleId%% 
=%% 
reader%% #
.%%# $
GetInt32%%$ ,
(%%, -
$num%%- .
)%%. /
;%%/ 0
users'' 
.'' 
Add'' 
('' 
new'' 
UserDto'' %
(''% &
)''& '
{''' (
id(( 
=(( 
id(( 
,(( 
name)) 
=)) 
name)) 
,))  
roleId** 
=** 
roleId** #
}++ 
)++ 
;++ 
},, 
}.. 	
catch// 
(// 
System// 
.// 
	Exception// 
ex//  "
)//" #
{00 	
Console11 
.11 
	WriteLine11 
(11 
$str11 &
+11' (
ex11) +
.11+ ,
Message11, 3
)113 4
;114 5
throw22 
;22 
}33 	
Close55 
(55 
)55 
;55 
return66 
users66 
;66 
}88 
public99 

async99 
Task99 
<99 
List99 
<99 
UserDto99 "
>99" #
>99# $
GetUserById99% 0
(990 1
int991 4
idUser995 ;
)99; <
{:: 
Connect<< 
(<< 
)<< 
;<< 
List>> 
<>> 
UserDto>> 
>>> 
users>> 
=>> 
new>> !
List>>" &
<>>& '
UserDto>>' .
>>>. /
(>>/ 0
)>>0 1
;>>1 2
string?? 
query?? 
=?? 
$str?? K
;??K L
tryAA 
{BB 	

SqlCommandCC 
commandCC 
=CC  
newCC! $

SqlCommandCC% /
(CC/ 0
queryCC0 5
,CC5 6
_connectionCC7 B
)CCB C
;CCC D
commandDD 
.DD 

ParametersDD 
.DD 
AddWithValueDD +
(DD+ ,
$strDD, 1
,DD1 2
idUserDD3 9
)DD9 :
;DD: ;
SqlDataReaderEE 
readerEE  
=EE! "
awaitEE# (
commandEE) 0
.EE0 1
ExecuteReaderAsyncEE1 C
(EEC D
)EED E
;EEE F
whileGG 
(GG 
awaitGG 
readerGG 
.GG  
	ReadAsyncGG  )
(GG) *
)GG* +
)GG+ ,
{HH 
intJJ 
idJJ 
=JJ 
readerJJ 
.JJ  
GetInt32JJ  (
(JJ( )
$numJJ) *
)JJ* +
;JJ+ ,
stringKK 
nameKK 
=KK 
readerKK $
.KK$ %
	GetStringKK% .
(KK. /
$numKK/ 0
)KK0 1
;KK1 2
intLL 
roleIdLL 
=LL 
readerLL #
.LL# $
GetInt32LL$ ,
(LL, -
$numLL- .
)LL. /
;LL/ 0
usersNN 
.NN 
AddNN 
(NN 
newNN 
UserDtoNN %
(NN% &
)NN& '
{NN' (
idOO 
=OO 
idOO 
,OO 
namePP 
=PP 
namePP 
,PP  
roleIdQQ 
=QQ 
roleIdQQ #
}RR 
)RR 
;RR 
}SS 
}UU 	
catchVV 
(VV 
SystemVV 
.VV 
	ExceptionVV 
exVV  "
)VV" #
{WW 	
ConsoleXX 
.XX 
	WriteLineXX 
(XX 
$strXX &
+XX' (
exXX) +
.XX+ ,
MessageXX, 3
)XX3 4
;XX4 5
throwYY 
;YY 
}ZZ 	
Close\\ 
(\\ 
)\\ 
;\\ 
return]] 
users]] 
;]] 
}__ 
public`` 

async`` 
Task`` 
<`` 
List`` 
<`` 
UserDto`` "
>``" #
>``# $
GetUserByName``% 2
(``2 3
UserDto``3 :
user``; ?
)``? @
{aa 
Connectcc 
(cc 
)cc 
;cc 
Listee 
<ee 
UserDtoee 
>ee 
usersee 
=ee 
newee !
Listee" &
<ee& '
UserDtoee' .
>ee. /
(ee/ 0
)ee0 1
;ee1 2
stringff 
queryff 
=ff 
$strff V
;ffV W
tryhh 
{ii 	

SqlCommandjj 
commandjj 
=jj  
newjj! $

SqlCommandjj% /
(jj/ 0
queryjj0 5
,jj5 6
_connectionjj7 B
)jjB C
;jjC D
commandkk 
.kk 

Parameterskk 
.kk 
AddWithValuekk +
(kk+ ,
$strkk, 3
,kk3 4
userkk5 9
.kk9 :
namekk: >
?kk> ?
.kk? @
ToLowerkk@ G
(kkG H
)kkH I
)kkI J
;kkJ K
SqlDataReaderll 
readerll  
=ll! "
awaitll# (
commandll) 0
.ll0 1
ExecuteReaderAsyncll1 C
(llC D
)llD E
;llE F
whilenn 
(nn 
awaitnn 
readernn 
.nn  
	ReadAsyncnn  )
(nn) *
)nn* +
)nn+ ,
{oo 
intqq 
idqq 
=qq 
readerqq 
.qq  
GetInt32qq  (
(qq( )
$numqq) *
)qq* +
;qq+ ,
stringrr 
namerr 
=rr 
readerrr $
.rr$ %
	GetStringrr% .
(rr. /
$numrr/ 0
)rr0 1
;rr1 2
intss 
roleIdss 
=ss 
readerss #
.ss# $
GetInt32ss$ ,
(ss, -
$numss- .
)ss. /
;ss/ 0
usersuu 
.uu 
Adduu 
(uu 
newuu 
UserDtouu %
(uu% &
)uu& '
{uu' (
idvv 
=vv 
idvv 
,vv 
nameww 
=ww 
nameww 
,ww  
roleIdxx 
=xx 
roleIdxx #
}yy 
)yy 
;yy 
}zz 
}|| 	
catch}} 
(}} 
System}} 
.}} 
	Exception}} 
ex}}  "
)}}" #
{~~ 	
Console 
. 
	WriteLine 
( 
$str &
+' (
ex) +
.+ ,
Message, 3
)3 4
;4 5
throw
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
Close
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
return
ÑÑ 
users
ÑÑ 
;
ÑÑ 
}
ÜÜ 
public
áá 

async
áá 
Task
áá 
<
áá 
List
áá 
<
áá 
InsertedUserDto
áá *
>
áá* +
>
áá+ ,
AddUser
áá- 4
(
áá4 5
User
áá5 9
user
áá: >
)
áá> ?
{
àà 
string
ää 
encryptedPassword
ää  
=
ää! "
EncryptString
ää# 0
.
ää0 1
EncryptPassword
ää1 @
(
ää@ A
user
ääA E
.
ääE F
password
ääF N
)
ääN O
;
ääO P
Connect
åå 
(
åå 
)
åå 
;
åå 
List
éé 
<
éé 
InsertedUserDto
éé 
>
éé 
users
éé #
=
éé$ %
new
éé& )
List
éé* .
<
éé. /
InsertedUserDto
éé/ >
>
éé> ?
(
éé? @
)
éé@ A
;
ééA B
string
èè 
query
èè 
=
èè 
$str
èè h
;
èèh i
try
ëë 
{
íí 	

SqlCommand
ìì 
command
ìì 
=
ìì  
new
ìì! $

SqlCommand
ìì% /
(
ìì/ 0
query
ìì0 5
,
ìì5 6
_connection
ìì7 B
)
ììB C
;
ììC D
command
îî 
.
îî 

Parameters
îî 
.
îî 
AddWithValue
îî +
(
îî+ ,
$str
îî, 3
,
îî3 4
user
îî5 9
.
îî9 :
name
îî: >
)
îî> ?
;
îî? @
command
ïï 
.
ïï 

Parameters
ïï 
.
ïï 
AddWithValue
ïï +
(
ïï+ ,
$str
ïï, 6
,
ïï6 7
user
ïï8 <
.
ïï< =
roleId
ïï= C
)
ïïC D
;
ïïD E
command
ññ 
.
ññ 

Parameters
ññ 
.
ññ 
AddWithValue
ññ +
(
ññ+ ,
$str
ññ, 7
,
ññ7 8
encryptedPassword
ññ9 J
)
ññJ K
;
ññK L
await
óó 
command
óó 
.
óó "
ExecuteNonQueryAsync
óó .
(
óó. /
)
óó/ 0
;
óó0 1
}
ôô 	
catch
öö 
(
öö 
System
öö 
.
öö 
	Exception
öö 
ex
öö  "
)
öö" #
{
õõ 	
Console
úú 
.
úú 
	WriteLine
úú 
(
úú 
$str
úú &
+
úú' (
ex
úú) +
.
úú+ ,
Message
úú, 3
)
úú3 4
;
úú4 5
throw
ùù 
;
ùù 
}
ûû 	
Close
†† 
(
†† 
)
†† 
;
†† 
users
¢¢ 
.
¢¢ 
Add
¢¢ 
(
¢¢ 
new
¢¢ 
InsertedUserDto
¢¢ %
(
¢¢% &
)
¢¢& '
{
¢¢' (
name
££ 
=
££ 
user
££ 
.
££ 
name
££ 
,
££ 
roleId
§§ 
=
§§ 
user
§§ 
.
§§ 
roleId
§§  
}
•• 	
)
••	 

;
••
 
return
¶¶ 
users
¶¶ 
;
¶¶ 
}
®® 
public
©© 

async
©© 
Task
©© 
<
©© 
List
©© 
<
©© 
UserDto
©© "
>
©©" #
>
©©# $

UpdateUser
©©% /
(
©©/ 0
User
©©0 4
user
©©5 9
)
©©9 :
{
™™ 
List
¨¨ 
<
¨¨ 
UserDto
¨¨ 
>
¨¨ 
users
¨¨ 
=
¨¨ 
await
¨¨ #
GetUserById
¨¨$ /
(
¨¨/ 0
user
¨¨0 4
.
¨¨4 5
id
¨¨5 7
)
¨¨7 8
;
¨¨8 9
if
≠≠ 

(
≠≠ 
users
≠≠ 
.
≠≠ 
Count
≠≠ 
==
≠≠ 
$num
≠≠ 
)
≠≠ 
return
≠≠ $
new
≠≠% (
List
≠≠) -
<
≠≠- .
UserDto
≠≠. 5
>
≠≠5 6
(
≠≠6 7
)
≠≠7 8
;
≠≠8 9
Connect
ØØ 
(
ØØ 
)
ØØ 
;
ØØ 
try
±± 
{
≤≤ 	
string
≥≥ 
query
≥≥ 
=
≥≥ 
$str
≥≥ O
;
≥≥O P
if
µµ 
(
µµ 
user
µµ 
.
µµ 
password
µµ 
!=
µµ  
null
µµ! %
)
µµ% &
{
∂∂ 
query
∑∑ 
=
∑∑ 
$str
∑∑ b
;
∑∑b c
}
∏∏ 

SqlCommand
∫∫ 
command
∫∫ 
=
∫∫  
new
∫∫! $

SqlCommand
∫∫% /
(
∫∫/ 0
query
∫∫0 5
,
∫∫5 6
_connection
∫∫7 B
)
∫∫B C
;
∫∫C D
command
ªª 
.
ªª 

Parameters
ªª 
.
ªª 
AddWithValue
ªª +
(
ªª+ ,
$str
ªª, 1
,
ªª1 2
user
ªª3 7
.
ªª7 8
id
ªª8 :
)
ªª: ;
;
ªª; <
command
ºº 
.
ºº 

Parameters
ºº 
.
ºº 
AddWithValue
ºº +
(
ºº+ ,
$str
ºº, 6
,
ºº6 7
user
ºº8 <
.
ºº< =
roleId
ºº= C
)
ººC D
;
ººD E
if
ΩΩ 
(
ΩΩ 
user
ΩΩ 
.
ΩΩ 
password
ΩΩ 
!=
ΩΩ  
null
ΩΩ! %
)
ΩΩ% &
{
ΩΩ' (
string
ææ 
encryptedPassword
ææ (
=
ææ) *
EncryptString
ææ+ 8
.
ææ8 9
EncryptPassword
ææ9 H
(
ææH I
user
ææI M
.
ææM N
password
ææN V
)
ææV W
;
ææW X
command
øø 
.
øø 

Parameters
øø "
.
øø" #
AddWithValue
øø# /
(
øø/ 0
$str
øø0 ;
,
øø; <
encryptedPassword
øø= N
)
øøN O
;
øøO P
}
¿¿ 
await
¡¡ 
command
¡¡ 
.
¡¡ "
ExecuteNonQueryAsync
¡¡ .
(
¡¡. /
)
¡¡/ 0
;
¡¡0 1
}
√√ 	
catch
ƒƒ 
(
ƒƒ 
System
ƒƒ 
.
ƒƒ 
	Exception
ƒƒ 
ex
ƒƒ  "
)
ƒƒ" #
{
≈≈ 	
Console
∆∆ 
.
∆∆ 
	WriteLine
∆∆ 
(
∆∆ 
$str
∆∆ &
+
∆∆' (
ex
∆∆) +
.
∆∆+ ,
Message
∆∆, 3
)
∆∆3 4
;
∆∆4 5
throw
«« 
;
«« 
}
»» 	
Close
   
(
   
)
   
;
   
var
ÃÃ 
userDto
ÃÃ 
=
ÃÃ 
new
ÃÃ 
UserDto
ÃÃ !
(
ÃÃ! "
)
ÃÃ" #
{
ÃÃ# $
id
ÕÕ 
=
ÕÕ 
user
ÕÕ 
.
ÕÕ 
id
ÕÕ 
,
ÕÕ 
name
ŒŒ 
=
ŒŒ 
users
ŒŒ 
.
ŒŒ 
First
ŒŒ 
(
ŒŒ 
)
ŒŒ  
.
ŒŒ  !
name
ŒŒ! %
,
ŒŒ% &
roleId
œœ 
=
œœ 
user
œœ 
.
œœ 
roleId
œœ  
}
–– 	
;
––	 

users
—— 
.
—— 
Clear
—— 
(
—— 
)
—— 
;
—— 
users
““ 
.
““ 
Add
““ 
(
““ 
userDto
““ 
)
““ 
;
““ 
return
”” 
users
”” 
;
”” 
}
÷÷ 
public
◊◊ 

async
◊◊ 
Task
◊◊ 
<
◊◊ 
List
◊◊ 
<
◊◊ 
UserDto
◊◊ "
>
◊◊" #
>
◊◊# $

DeleteUser
◊◊% /
(
◊◊/ 0
int
◊◊0 3
idUser
◊◊4 :
)
◊◊: ;
{
ÿÿ 
List
ŸŸ 
<
ŸŸ 
UserDto
ŸŸ 
>
ŸŸ 
users
ŸŸ 
=
ŸŸ 
await
ŸŸ #
GetUserById
ŸŸ$ /
(
ŸŸ/ 0
idUser
ŸŸ0 6
)
ŸŸ6 7
;
ŸŸ7 8
if
⁄⁄ 

(
⁄⁄ 
users
⁄⁄ 
.
⁄⁄ 
Count
⁄⁄ 
==
⁄⁄ 
$num
⁄⁄ 
)
⁄⁄ 
return
⁄⁄ $
new
⁄⁄% (
List
⁄⁄) -
<
⁄⁄- .
UserDto
⁄⁄. 5
>
⁄⁄5 6
(
⁄⁄6 7
)
⁄⁄7 8
;
⁄⁄8 9
Connect
‹‹ 
(
‹‹ 
)
‹‹ 
;
‹‹ 
string
ﬁﬁ 
query
ﬁﬁ 
=
ﬁﬁ 
$str
ﬁﬁ 9
;
ﬁﬁ9 :
try
‡‡ 
{
·· 	

SqlCommand
‚‚ 
command
‚‚ 
=
‚‚  
new
‚‚! $

SqlCommand
‚‚% /
(
‚‚/ 0
query
‚‚0 5
,
‚‚5 6
_connection
‚‚7 B
)
‚‚B C
;
‚‚C D
command
„„ 
.
„„ 

Parameters
„„ 
.
„„ 
AddWithValue
„„ +
(
„„+ ,
$str
„„, 1
,
„„1 2
idUser
„„3 9
)
„„9 :
;
„„: ;
await
‰‰ 
command
‰‰ 
.
‰‰ "
ExecuteNonQueryAsync
‰‰ .
(
‰‰. /
)
‰‰/ 0
;
‰‰0 1
}
ÊÊ 	
catch
ÁÁ 
(
ÁÁ 
System
ÁÁ 
.
ÁÁ 
	Exception
ÁÁ 
ex
ÁÁ  "
)
ÁÁ" #
{
ËË 	
Console
ÈÈ 
.
ÈÈ 
	WriteLine
ÈÈ 
(
ÈÈ 
$str
ÈÈ &
+
ÈÈ' (
ex
ÈÈ) +
.
ÈÈ+ ,
Message
ÈÈ, 3
)
ÈÈ3 4
;
ÈÈ4 5
throw
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
Close
ÌÌ 
(
ÌÌ 
)
ÌÌ 
;
ÌÌ 
return
ÔÔ 
users
ÔÔ 
;
ÔÔ 
}
ÒÒ 
public
ÛÛ 

async
ÛÛ 
Task
ÛÛ 
<
ÛÛ 
LoginDto
ÛÛ 
>
ÛÛ 
GetUserToLogin
ÛÛ  .
(
ÛÛ. /
LoginDto
ÛÛ/ 7
user
ÛÛ8 <
)
ÛÛ< =
{
ÛÛ= >
LoginDto
ıı 
loginDto
ıı 
;
ıı 
Connect
˜˜ 
(
˜˜ 
)
˜˜ 
;
˜˜ 
string
˘˘ 
query
˘˘ 
=
˘˘ 
$str
˘˘ `
;
˘˘` a
try
˚˚ 
{
¸¸ 	

SqlCommand
˝˝ 
command
˝˝ 
=
˝˝  
new
˝˝! $

SqlCommand
˝˝% /
(
˝˝/ 0
query
˝˝0 5
,
˝˝5 6
_connection
˝˝7 B
)
˝˝B C
;
˝˝C D
command
˛˛ 
.
˛˛ 

Parameters
˛˛ 
.
˛˛ 
AddWithValue
˛˛ +
(
˛˛+ ,
$str
˛˛, 3
,
˛˛3 4
user
˛˛5 9
.
˛˛9 :
Username
˛˛: B
?
˛˛B C
.
˛˛C D
ToLower
˛˛D K
(
˛˛K L
)
˛˛L M
)
˛˛M N
;
˛˛N O
SqlDataReader
ˇˇ 
reader
ˇˇ  
=
ˇˇ! "
await
ˇˇ# (
command
ˇˇ) 0
.
ˇˇ0 1 
ExecuteReaderAsync
ˇˇ1 C
(
ˇˇC D
)
ˇˇD E
;
ˇˇE F
await
ÅÅ 
reader
ÅÅ 
.
ÅÅ 
	ReadAsync
ÅÅ "
(
ÅÅ" #
)
ÅÅ# $
;
ÅÅ$ %
{
ÇÇ 
int
ÉÉ 
id
ÉÉ 
=
ÉÉ 
reader
ÉÉ 
.
ÉÉ  
GetInt32
ÉÉ  (
(
ÉÉ( )
$num
ÉÉ) *
)
ÉÉ* +
;
ÉÉ+ ,
string
ÑÑ 
name
ÑÑ 
=
ÑÑ 
reader
ÑÑ $
.
ÑÑ$ %
	GetString
ÑÑ% .
(
ÑÑ. /
$num
ÑÑ/ 0
)
ÑÑ0 1
;
ÑÑ1 2
string
ÖÖ 
password
ÖÖ 
=
ÖÖ  !
reader
ÖÖ" (
.
ÖÖ( )
	GetString
ÖÖ) 2
(
ÖÖ2 3
$num
ÖÖ3 4
)
ÖÖ4 5
;
ÖÖ5 6
int
ÜÜ 
roleId
ÜÜ 
=
ÜÜ 
reader
ÜÜ #
.
ÜÜ# $
GetInt32
ÜÜ$ ,
(
ÜÜ, -
$num
ÜÜ- .
)
ÜÜ. /
;
ÜÜ/ 0
loginDto
ââ 
=
ââ 
new
ââ 
LoginDto
ââ '
(
ââ' (
)
ââ( )
{
ââ) *
Id
ää 
=
ää 
id
ää 
,
ää 
Username
ãã 
=
ãã 
name
ãã #
,
ãã# $
Password
åå 
=
åå 
password
åå '
,
åå' (
roleId
çç 
=
çç 
roleId
çç #
}
éé 
;
éé 
}
èè 
}
ëë 	
catch
íí 
(
íí 
System
íí 
.
íí 
	Exception
íí 
ex
íí  "
)
íí" #
{
ìì 	
Console
îî 
.
îî 
	WriteLine
îî 
(
îî 
$str
îî &
+
îî' (
ex
îî) +
.
îî+ ,
Message
îî, 3
)
îî3 4
;
îî4 5
throw
ïï 
;
ïï 
}
ññ 	
Close
òò 
(
òò 
)
òò 
;
òò 
return
ôô 
loginDto
ôô 
;
ôô 
}
öö 
}úú ﬂ
a/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Model/Entities/RefreshToken.cs
	namespace 	
SQL_SERVER_API
 
. 
Model 
. 
Entities '
;' (
public 
class 
RefreshToken 
{ 
public 

int 
IdUser 
{ 
get 
; 
set  
;  !
}" #
[

 
Required

 
]

 
public 

string 
? 
Token 
{ 
get 
; 
set  #
;# $
}% &
public 

string 
? 
Expire 
{ 
get 
;  
set! $
;$ %
}& '
} ß$
M/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
	AddScoped 
< 
ICommService '
<' (
User( ,
,, -
UserDto. 5
,5 6
InsertedUserDto7 F
>F G
,G H
UsersServiceI U
>U V
(V W
)W X
;X Y
builder 
. 
Services 
. 
	AddScoped 
< 
ITokenService (
,( )
TokenService* 6
>6 7
(7 8
)8 9
;9 :
builder 
. 
Services 
. 
	AddScoped 
< 
IAuthService '
,' (
AuthService) 4
>4 5
(5 6
)6 7
;7 8
var 

jwtSection 
= 
builder 
. 
Configuration &
.& '

GetSection' 1
(1 2
$str2 7
)7 8
;8 9
builder 
. 
Services 
. 
AddAuthentication "
(" #
JwtBearerDefaults# 4
.4 5 
AuthenticationScheme5 I
)I J
. 
AddJwtBearer 
( 
options 
=> 
{ 
options 
. %
TokenValidationParameters )
=* +
new, /%
TokenValidationParameters0 I
{ 	
ValidateIssuer 
= 
true !
,! "
ValidateAudience 
= 
true #
,# $
ValidateLifetime 
= 
true #
,# $$
ValidateIssuerSigningKey $
=% &
true' +
,+ ,
ValidIssuer 
= 

jwtSection $
.$ %
GetValue% -
<- .
string. 4
>4 5
(5 6
$str6 >
)> ?
,? @
ValidAudience   
=   

jwtSection   &
.  & '
GetValue  ' /
<  / 0
string  0 6
>  6 7
(  7 8
$str  8 B
)  B C
,  C D
IssuerSigningKey!! 
=!! 
new!! " 
SymmetricSecurityKey!!# 7
(!!7 8
Encoding!!8 @
.!!@ A
UTF8!!A E
.!!E F
GetBytes!!F N
(!!N O

jwtSection!!O Y
.!!Y Z
GetValue!!Z b
<!!b c
string!!c i
>!!i j
(!!j k
$str!!k s
)!!s t
)!!t u
)!!u v
,!!v w
RoleClaimType"" 
="" 

ClaimTypes"" &
.""& '
Role""' +
}$$ 	
;$$	 

}%% 
)%% 
;%% 
builder'' 
.'' 
Services'' 
.'' 
AddControllers'' 
(''  
)''  !
;''! "
builder)) 
.)) 
Services)) 
.)) #
AddEndpointsApiExplorer)) (
())( )
)))) *
;))* +
builder** 
.** 
Services** 
.** 
AddSwaggerGen** 
(** 
)**  
;**  !
var,, 
app,, 
=,, 	
builder,,
 
.,, 
Build,, 
(,, 
),, 
;,, 
if// 
(// 
app// 
.// 
Environment// 
.// 
IsDevelopment// !
(//! "
)//" #
)//# $
{00 
app11 
.11 

UseSwagger11 
(11 
)11 
;11 
app22 
.22 
UseSwaggerUI22 
(22 
)22 
;22 
}33 
app55 
.55 
UseHttpsRedirection55 
(55 
)55 
;55 
app77 
.77 
UseAuthentication77 
(77 
)77 
;77 
app88 
.88 
UseAuthorization88 
(88 
)88 
;88 
app:: 
.:: 
MapControllers:: 
(:: 
):: 
;:: 
app<< 
.<< 
Run<< 
(<< 
)<< 	
;<<	 
ƒ?
a/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Repository/TokenRespository.cs
	namespace 	
SQL_SERVER_API
 
. 

Repository #
;# $
public		 
class		 
TokenRespository		 
:		 
	DbContext		  )
{

 
public 

TokenRespository 
( 
string "
connectionString# 3
)3 4
:5 6
base7 ;
(; <
connectionString< L
)L M
{ 
} 
public 
async 
Task 
< 
bool 
> 
StoreRefreshToken  1
(1 2
int2 5
userId6 <
,< =
string> D
refreshTokenE Q
,Q R
stringS Y
expireZ `
)` a
{ 
Connect 
( 
) 
; 
string 
query 
= 
$str |
;| }
try 
{ 	

SqlCommand 
command 
=  
new! $

SqlCommand% /
(/ 0
query0 5
,5 6
_connection7 B
)B C
;C D
command 
. 

Parameters 
. 
AddWithValue +
(+ ,
$str, 5
,5 6
userId7 =
)= >
;> ?
command 
. 

Parameters 
. 
AddWithValue +
(+ ,
$str, ;
,; <
refreshToken= I
)I J
;J K
command 
. 

Parameters 
. 
Add 
( 
$str (
,( )
	SqlDbType* 3
.3 4
DateTime4 <
)< =
.= >
Value> C
=D E
expireF L
;L M
await 
command 
.  
ExecuteNonQueryAsync .
(. /
)/ 0
;0 1
}!! 	
catch"" 
("" 
System"" 
."" 
	Exception"" 
ex""  "
)""" #
{## 	
Console$$ 
.$$ 
	WriteLine$$ 
($$ 
$str$$ &
+$$' (
ex$$) +
.$$+ ,
Message$$, 3
)$$3 4
;$$4 5
return%% 
false%% 
;%% 
throw&& 
;&& 
}'' 	
Close)) 
()) 
))) 
;)) 
return++ 
true++ 
;++ 
}-- 
public// 

async// 
Task// 
<// 
RefreshToken// "
>//" #
GetRefreshToken//$ 3
(//3 4
string//4 :
refreshToken//; G
)//G H
{//H I
RefreshToken11 
TokenRefresh11 !
;11! "
Connect33 
(33 
)33 
;33 
string55 
query55 
=55 
$str55 u
;55u v
try77 
{88 	

SqlCommand99 
command99 
=99  
new99! $

SqlCommand99% /
(99/ 0
query990 5
,995 6
_connection997 B
)99B C
;99C D
command:: 
.:: 

Parameters:: 
.:: 
AddWithValue:: +
(::+ ,
$str::, ;
,::; <
refreshToken::= I
)::I J
;::J K
SqlDataReader;; 
reader;;  
=;;! "
await;;# (
command;;) 0
.;;0 1
ExecuteReaderAsync;;1 C
(;;C D
);;D E
;;;E F
await== 
reader== 
.== 
	ReadAsync== "
(==" #
)==# $
;==$ %
{>> 
int?? 
id_user?? 
=?? 
reader?? $
.??$ %
GetInt32??% -
(??- .
$num??. /
)??/ 0
;??0 1
string@@ 
refresh_token@@ $
=@@% &
reader@@' -
.@@- .
	GetString@@. 7
(@@7 8
$num@@8 9
)@@9 :
;@@: ;
DateTimeAA 
expireAA 
=AA  !
readerAA" (
.AA( )
GetDateTimeAA) 4
(AA4 5
$numAA5 6
)AA6 7
;AA7 8
TokenRefreshCC 
=CC 
newCC "
RefreshTokenCC# /
{DD 
IdUserEE 
=EE 
id_userEE $
,EE$ %
TokenFF 
=FF 
refresh_tokenFF )
,FF) *
ExpireGG 
=GG 
expireGG #
.GG# $
ToStringGG$ ,
(GG, -
)GG- .
}HH 
;HH 
}II 
}KK 	
catchLL	 
(LL 
SystemLL 
.LL 
	ExceptionLL  
exLL! #
)LL# $
{MM 	
ConsoleNN 
.NN 
	WriteLineNN 
(NN 
$strNN 9
+NN: ;
exNN< >
.NN> ?
MessageNN? F
)NNF G
;NNG H
throwOO 
;OO 
}PP 	
CloseRR 
(RR 
)RR 
;RR 
returnSS 
TokenRefreshSS 
;SS 
}UU 
publicXX 
asyncXX 
TaskXX 
<XX 
RefreshTokenXX &
>XX& '!
GetRefreshTokenByUserXX( =
(XX= >
intXX> A
userIdXXB H
)XXH I
{XXI J
RefreshTokenZZ 
TokenRefreshZZ !
;ZZ! "
Connect\\ 
(\\ 
)\\ 
;\\ 
string__ 
query__ 
=__ 
$str	__ Ä
;
__Ä Å
tryaa 
{bb 	

SqlCommandcc 
commandcc 
=cc  
newcc! $

SqlCommandcc% /
(cc/ 0
querycc0 5
,cc5 6
_connectioncc7 B
)ccB C
;ccC D
commanddd 
.dd 

Parametersdd 
.dd 
AddWithValuedd +
(dd+ ,
$strdd, 5
,dd5 6
userIddd7 =
)dd= >
;dd> ?
SqlDataReaderee 
readeree  
=ee! "
awaitee# (
commandee) 0
.ee0 1
ExecuteReaderAsyncee1 C
(eeC D
)eeD E
;eeE F
awaitgg 
readergg 
.gg 
	ReadAsyncgg "
(gg" #
)gg# $
;gg$ %
{hh 
intii 
id_userii 
=ii 
readerii $
.ii$ %
GetInt32ii% -
(ii- .
$numii. /
)ii/ 0
;ii0 1
stringjj 
refresh_tokenjj $
=jj% &
readerjj' -
.jj- .
	GetStringjj. 7
(jj7 8
$numjj8 9
)jj9 :
;jj: ;
DateTimekk 
expirekk 
=kk  !
readerkk" (
.kk( )
GetDateTimekk) 4
(kk4 5
$numkk5 6
)kk6 7
;kk7 8
TokenRefreshmm 
=mm 
newmm "
RefreshTokenmm# /
{nn 
IdUseroo 
=oo 
id_useroo $
,oo$ %
Tokenpp 
=pp 
refresh_tokenpp )
,pp) *
Expireqq 
=qq 
expireqq #
.qq# $
ToStringqq$ ,
(qq, -
)qq- .
}rr 
;rr 
}ss 
}uu 	
catchvv	 
(vv 
Systemvv 
.vv 
	Exceptionvv  
exvv! #
)vv# $
{ww 	
Consolexx 
.xx 
	WriteLinexx 
(xx 
$strxx 9
+xx: ;
exxx< >
.xx> ?
Messagexx? F
)xxF G
;xxG H
throwyy 
;yy 
}zz 	
Close|| 
(|| 
)|| 
;|| 
return}} 
TokenRefresh}} 
;}} 
} 
}ÄÄ Ø
Y/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Model/Entities/User.cs
	namespace 	
SQL_SERVER_API
 
. 
Model 
. 
Entities '
;' (
public 
class 
User 
{ 
public 

int 
id 
{ 
get 
; 
set 
; 
} 
public 

string 
? 
name 
{ 
get 
; 
set "
;" #
}$ %
public		 

int		 
roleId		 
{		 
get		 
;		 
set		  
;		  !
}		" #
public

 

string

 
?

 
password

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
} ∞
U/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Model/DbContext.cs
	namespace 	
SQL_SERVER_API
 
. 
Model 
; 
public 
abstract 
class 
	DbContext 
{ 
private 
string 
_connectionString $
;$ %
	protected		 
SqlConnection		 
_connection		 '
;		' (
public 

	DbContext 
( 
string 
connectionString ,
), -
{- .
_connectionString 
= 
connectionString ,
;, -
} 
public 

void 
Connect 
( 
) 
{ 
try 
{ 	
_connection 
= 
new 
SqlConnection +
(+ ,
_connectionString, =
)= >
;> ?
_connection 
. 
Open 
( 
) 
; 
} 	
catch 
( 
System 
. 
	Exception 
ex  "
)" #
{ 	
Console 
. 
	WriteLine 
( 
$str &
+' (
ex) +
.+ ,
Message, 3
)3 4
;4 5
throw 
; 
} 	
} 
public 

void 
Close 
( 
) 
{ 
if   

(  
 
_connection   
!=   
null   
&&   !
_connection  " -
.  - .
State  . 3
==  4 6
System  7 =
.  = >
Data  > B
.  B C
ConnectionState  C R
.  R S
Open  S W
)  W X
{!! 	
_connection"" 
."" 
Close"" 
("" 
)"" 
;""  
}## 	
}$$ 
}&& Ë
^/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Interfaces/ITokenService.cs
	namespace 	
SQL_SERVER_API
 
. 

Interfaces #
;# $
public 
	interface 
ITokenService 
{ 
string		 

GenerateJwtToken		 
(		 
UserDto		 #
userDto		$ +
)		+ ,
;		, -
Task

 
<

 	
string

	 
>

  
GenerateRefreshToken

 %
(

% &
UserDto

& -
userDto

. 5
)

5 6
;

6 7
Task 
< 	
RefreshToken	 
> 
GetRefreshToken &
(& '
string' -
refreshToken. :
): ;
;; <
Task 
< 	
string	 
> 
verifyExpiredToken #
(# $
UserDto$ +
userDto, 3
)3 4
;4 5
} ∞
]/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Interfaces/ICommService.cs
	namespace 	
SQL_SERVER_API
 
. 

Interfaces #
;# $
public 
	interface 
ICommService 
< 
TEntity %
,% &

TEntityDto' 1
,1 2

TInsertDto3 =
>= >
{ 
public		 

Task		 
<		 
List		 
<		 

TEntityDto		 
>		  
>		  !
Get		" %
(		% &
)		& '
;		' (
public

 

Task

 
<

 
List

 
<

 

TEntityDto

 
>

  
>

  !
GetById

" )
(

) *
int

* -
id

. 0
)

0 1
;

1 2
public 

Task 
< 
List 
< 

TEntityDto 
>  
>  !
	GetByName" +
(+ ,

TEntityDto, 6
entity7 =
)= >
;> ?
public 

Task 
< 
List 
< 

TInsertDto 
>  
>  !
Add" %
(% &
TEntity& -
entity. 4
)4 5
;5 6
public 

Task 
< 
List 
< 

TEntityDto 
>  
>  !
Update" (
(( )
TEntity) 0
entity1 7
)7 8
;8 9
public 

Task 
< 
List 
< 

TEntityDto 
>  
>  !
Delete" (
(( )
int) ,
id- /
)/ 0
;0 1
} ª
]/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Interfaces/IAuthService.cs
	namespace 	
SQL_SERVER_API
 
. 

Interfaces #
;# $
public 
	interface 
IAuthService 
{ 
Task 
< 	
List	 
< 
string 
> 
> 
Login 
( 
LoginDto %
loginDto& .
). /
;/ 0
Task 
< 	
LoginDto	 
> 
GetUserToLogin !
(! "
LoginDto" *
user+ /
)/ 0
;0 1
Task		 	
<			 

List		
 
<		 
UserDto		 
>		 
>		 /
#VerifyAndRetrieveUserByRefreshToken		 <
(		< =
string		= C
refreshToken		D P
)		P Q
;		Q R
}

 ≥
U/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Helpers/Encrypt.cs
	namespace 	
SQL_SERVER_API
 
. 
Helpers  
;  !
public		 
static		 
class		 
EncryptString		 !
{

 
public 

static 
string 
EncryptPassword (
(( )
string) /
password0 8
)8 9
{ 
using 
var 
sha256 
= 
SHA256 !
.! "
Create" (
(( )
)) *
;* +
var 
bytes 
= 
sha256 
. 
ComputeHash &
(& '
Encoding' /
./ 0
UTF80 4
.4 5
GetBytes5 =
(= >
password> F
)F G
)G H
;H I
var 
encryptedPassword 
= 
Convert  '
.' (
ToBase64String( 6
(6 7
bytes7 <
)< =
;= >
return 
encryptedPassword  
;  !
} 
public 

static 
bool 
VerifyPassword %
(% &
string& ,
password- 5
,5 6
string7 =
hashedPassword> L
)L M
{ 
using 
var 
sha256 
= 
SHA256 !
.! "
Create" (
(( )
)) *
;* +
var 
bytes 
= 
sha256 
. 
ComputeHash &
(& '
Encoding' /
./ 0
UTF80 4
.4 5
GetBytes5 =
(= >
password> F
)F G
)G H
;H I
var 
hashedInput 
= 
Convert !
.! "
ToBase64String" 0
(0 1
bytes1 6
)6 7
;7 8
return 
hashedInput 
== 
hashedPassword ,
;, -
} 
} ⁄
R/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/DTOs/UserDto.cs
	namespace 	
SQL_SERVER_API
 
. 
DTOs 
; 
public 
class 
UserDto 
{ 
public 

int 
id 
{ 
get 
; 
set 
; 
} 
public 

string 
? 
name 
{ 
get 
; 
set "
;" #
}$ %
public		 

int		 
roleId		 
{		 
get		 
;		 
set		  
;		  !
}		" #
}

 –
^/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/DTOs/PostRefreshTokenDto.cs
	namespace 	
SQL_SERVER_API
 
. 
DTOs 
; 
public 
class 
PostRefreshTokenDto  
{ 
public 

string 
? 
RefreshToken 
{  !
get" %
;% &
set' *
;* +
}, -
}		 ô
S/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/DTOs/LoginDto.cs
	namespace 	
SQL_SERVER_API
 
. 
DTOs 
; 
public 
class 
LoginDto 
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

required 
string 
Username #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public		 

required		 
string		 
Password		 #
{		$ %
get		& )
;		) *
set		+ .
;		. /
}		0 1
public 

int 
roleId 
{ 
get 
; 
set  
;  !
}" #
} ’
X/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/DTOs/InsertUserDto.cs
	namespace 	
SQL_SERVER_API
 
. 
DTOs 
; 
public 
class 
InsertedUserDto 
{ 
public 

string 
? 
name 
{ 
get 
; 
set "
;" #
}$ %
public		 

int		 
roleId		 
{		 
get		 
;		 
set		  
;		  !
}		" #
} ◊3
`/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Controllers/UserController.cs
	namespace

 	
SQL_SERVER_API


 
.

 
Controllers

 $
;

$ %
[ 
	Authorize 

]
 
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
public 
class 
UserController 
: 
ControllerBase ,
{ 
private 
readonly 
ICommService !
<! "
User" &
,& '
UserDto( /
,/ 0
InsertedUserDto1 @
>@ A
_usersServiceB O
;O P
public 

UserController 
( 
ICommService &
<& '
User' +
,+ ,
UserDto- 4
,4 5
InsertedUserDto6 E
>E F
usersServiceG S
)S T
{ 
_usersService 
= 
usersService $
;$ %
} 
[ 
HttpGet 
( 
$str 
) 
] 
public 

async 
Task 
< 
ActionResult "
<" #
List# '
<' (
UserDto( /
>/ 0
>0 1
>1 2
GetUsers3 ;
(; <
)< =
{ 
var 
users 
= 
await 
_usersService '
.' (
Get( +
(+ ,
), -
;- .
return 
Ok 
( 
users 
) 
; 
} 
[ 
HttpGet 
( 
$str 
) 
] 
public   

async   
Task   
<   
ActionResult   "
<  " #
List  # '
<  ' (
UserDto  ( /
>  / 0
>  0 1
>  1 2
GetUser  3 :
(  : ;
int  ; >
id  ? A
)  A B
{!! 
var## 
user## 
=## 
await## 
_usersService## &
.##& '
GetById##' .
(##. /
id##/ 1
)##1 2
;##2 3
if%% 

(%% 
user%% 
.%% 
Count%% 
<%% 
$num%% 
)%% 
{&& 	
return'' 

BadRequest'' 
('' 
$str'' .
)''. /
;''/ 0
}(( 	
return** 
Ok** 
(** 
user** 
)** 
;** 
},, 
[.. 
	Authorize.. 
(.. 
Roles.. 
=.. 
$str.. 
).. 
].. 
[// 
HttpPost// 
(// 
$str// 
)// 
]// 
public00 

async00 
Task00 
<00 
ActionResult00 "
<00" #
List00# '
<00' (
InsertedUserDto00( 7
>007 8
>008 9
>009 :
AddUser00; B
(00B C
[00C D
FromBody00D L
]00L M
User00N R
newUser00S Z
)00Z [
{11 
try33 
{44 	
var55 
user55 
=55 
await55 
_usersService55 *
.55* +
Add55+ .
(55. /
newUser55/ 6
)556 7
;557 8
if77 
(77 
user77 
.77 
Count77 
<77 
$num77 
)77 
{88 
return99 

BadRequest99 !
(99! "
$str99" 7
)997 8
;998 9
}:: 
return<< 
Ok<< 
(<< 
user<< 
)<< 
;<< 
}== 	
catch>> 
(>> 
System>> 
.>> 
	Exception>> 
)>>  
{?? 	
returnAA 

BadRequestAA 
(AA 
$strAA 5
)AA5 6
;AA6 7
}BB 	
}DD 
[EE 
HttpPutEE 
(EE 
$strEE 
)EE 
]EE 
publicFF 

asyncFF 
TaskFF 
<FF 
ActionResultFF "
<FF" #
ListFF# '
<FF' (
UserDtoFF( /
>FF/ 0
>FF0 1
>FF1 2

UpdateUserFF3 =
(FF= >
[FF> ?
FromBodyFF? G
]FFG H
UserFFI M

updateUserFFN X
)FFX Y
{GG 
tryII 
{JJ 	
varKK 
userKK 
=KK 
awaitKK 
_usersServiceKK *
.KK* +
UpdateKK+ 1
(KK1 2

updateUserKK2 <
)KK< =
;KK= >
ifMM 
(MM 
userMM 
.MM 
CountMM 
<MM 
$numMM 
)MM 
{NN 
returnOO 

BadRequestOO !
(OO! "
$strOO" 2
)OO2 3
;OO3 4
}PP 
returnRR 
OkRR 
(RR 
userRR 
)RR 
;RR 
}SS 	
catchTT 
(TT 
SystemTT 
.TT 
	ExceptionTT 
)TT  
{UU 	
returnWW 

BadRequestWW 
(WW 
$strWW 5
)WW5 6
;WW6 7
}XX 	
}ZZ 
[[[ 

HttpDelete[[ 
([[ 
$str[[ 
)[[ 
][[ 
public\\ 

async\\ 
Task\\ 
<\\ 
ActionResult\\ "
<\\" #
List\\# '
<\\' (
UserDto\\( /
>\\/ 0
>\\0 1
>\\1 2

DeleteUser\\3 =
(\\= >
int\\> A
id\\B D
)\\D E
{]] 
var__ 
user__ 
=__ 
await__ 
_usersService__ &
.__& '
Delete__' -
(__- .
id__. 0
)__0 1
;__1 2
ifaa 

(aa 
useraa 
.aa 
Countaa 
<aa 
$numaa 
)aa 
{bb 	
returncc 

BadRequestcc 
(cc 
$strcc .
)cc. /
;cc/ 0
}dd 	
returnff 
Okff 
(ff 
userff 
)ff 
;ff 
}hh 
}ii …"
`/Users/felipemancillareyes/code/Personal/IvrProject/IvrProject.Api/Controllers/AuthController.cs
	namespace

 	
SQL_SERVER_API


 
.

 
Controllers

 $
;

$ %
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
public 
class 
AuthController 
: 
ControllerBase ,
{ 
private 
readonly 
IAuthService !
_authService" .
;. /
private 
readonly 
ITokenService "
_tokenService# 0
;0 1
public 

AuthController 
( 
IAuthService &
authService' 2
,2 3
ITokenService4 A
tokenServiceB N
)N O
{ 
_authService 
= 
authService "
;" #
_tokenService 
= 
tokenService $
;$ %
} 
[ 
HttpPost 
( 
$str 
) 
] 
public 

async 
Task 
< 
IActionResult #
># $
Login% *
(* +
[+ ,
FromBody, 4
]4 5
LoginDto6 >
loginDto? G
)G H
{ 
try 
{ 	
var 
userJwtArray 
= 
await $
_authService% 1
.1 2
Login2 7
(7 8
loginDto8 @
)@ A
;A B
var!! 
user_jwt!! 
=!! 
userJwtArray!! '
[!!' (
$num!!( )
]!!) *
;!!* +
var"" 
refreshToken"" 
="" 
userJwtArray"" +
[""+ ,
$num"", -
]""- .
;"". /
return$$ 
Ok$$ 
($$ 
new$$ 
{$$ 
user_jwt$$ $
,$$$ %
refreshToken$$& 2
}$$3 4
)$$4 5
;$$5 6
}%% 	
catch&& 
(&& 
System&& 
.&& 
	Exception&& 
ex&&  "
)&&" #
{'' 	
return)) 
Unauthorized)) 
())  
$str))  )
+))* +
ex)), .
.)). /
Message))/ 6
)))6 7
;))7 8
}** 	
},, 
[.. 
HttpPost.. 
(.. 
$str.. 
).. 
].. 
public// 

async// 
Task// 
<// 
IActionResult// #
>//# $
RefreshToken//% 1
(//1 2
[//2 3
FromBody//3 ;
]//; <
PostRefreshTokenDto//= P
refreshTokenDto//Q `
)//` a
{00 
var22 
refresh22 
=22 
refreshTokenDto22 %
;22% &
try44 
{55 	
List66 
<66 
UserDto66 
>66 
userList66 "
=66# $
await66% *
_authService66+ 7
.667 8/
#VerifyAndRetrieveUserByRefreshToken668 [
(66[ \
refresh66\ c
.66c d
RefreshToken66d p
)66p q
;66q r
var99 
userDto99 
=99 
userList99 "
.99" #
First99# (
(99( )
)99) *
;99* +
if;; 
(;; 
userDto;; 
==;; 
null;; 
);;  
{<< 
throw== 
new== 
	Exception== #
(==# $
$str==$ ;
)==; <
;==< =
}>> 
stringAA 
user_jwtAA 
=AA 
_tokenServiceAA +
.AA+ ,
GenerateJwtTokenAA, <
(AA< =
userDtoAA= D
)AAD E
;AAE F
returnCC 
OkCC 
(CC 
newCC 
{CC 
user_jwtCC $
}CC% &
)CC& '
;CC' (
}DD 	
catchEE 
(EE 
SystemEE 
.EE 
	ExceptionEE 
)EE  
{FF 	
returnHH 

BadRequestHH 
(HH 
$strHH 5
)HH5 6
;HH6 7
}II 	
}LL 
}NN 